[{"/Users/abraham/Geometry-editor/src/index.js":"1","/Users/abraham/Geometry-editor/src/App.js":"2","/Users/abraham/Geometry-editor/src/Canvas.js":"3","/Users/abraham/Geometry-editor/src/Stuff.js":"4","/Users/abraham/Geometry-editor/src/Geometry.js":"5"},{"size":152,"mtime":1652461676684,"results":"6","hashOfConfig":"7"},{"size":3260,"mtime":1652465947476,"results":"8","hashOfConfig":"7"},{"size":4410,"mtime":1662986996995,"results":"9","hashOfConfig":"7"},{"size":1901,"mtime":1652462275163,"results":"10","hashOfConfig":"7"},{"size":5984,"mtime":1662987003828,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hrt06z",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abraham/Geometry-editor/src/index.js",[],["24","25"],"/Users/abraham/Geometry-editor/src/App.js",[],"/Users/abraham/Geometry-editor/src/Canvas.js",["26"],"/Users/abraham/Geometry-editor/src/Stuff.js",["27"],"export function isNumeric(num) {\n  return !isNaN(num)\n}\n\nexport function isColor(x) {\n  let s = new Option().style\n  s.color = x\n  let test1 = s.color === x\n  let test2 = /^#[0-9A-F]{6}$/i.test(x)\n  return (test1 === true || test2 === true)\n}\n\nexport function isSpace(c) {\n  return (c === ' ') || (c === '\\t');\n}\n\nexport function divideByTokens(str) {\n  var result = [];\n  var last = \"\";\n  for (var i in str) {\n    var c = str[i];\n    if (isSpace(c)) {\n      if (last !== \"\") {\n        result.push(last);\n      }\n      last = \"\";\n    } else {\n      last += c;\n    }\n  }\n  if (last !== \"\") {\n    result.push(last);\n  }\n  return result;\n}\n\nfunction getRGB(v) {\n  var el = document.createElement(\"div\");\n  el.style[\"background-color\"] = v;\n  document.body.appendChild(el);\n\n  var style = window.getComputedStyle(el);\n  var color = style[\"backgroundColor\"];\n  document.body.removeChild(el);\n\n  return color;\n}\n\nfunction parseColor(color) {\n  var arr = [];\n  color.replace(/[\\d+\\.]+/g, function (v) {\n    arr.push(parseFloat(v));\n  });\n  return \"#\" + arr.slice(0, 3).map(toHex).join(\"\");\n}\n\nfunction toHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport function lightenColor(col, amt = 40) {\n  if (col.charAt(0) !== '#') {\n    col = parseColor(getRGB(col));\n  }\n\n  var cur = col.charAt(0) === '#' ? col.substring(1, 7) : col;\n\n  var r = Math.max(Math.min(255, parseInt(cur.substring(0, 2), 16) + amt), 0).toString(16)\n  var g = Math.max(Math.min(255, parseInt(cur.substring(2, 4), 16) + amt), 0).toString(16)\n  var b = Math.max(Math.min(255, parseInt(cur.substring(4, 6), 16) + amt), 0).toString(16)\n\n  const rr = (r.length < 2 ? '0' : '') + r\n  const gg = (g.length < 2 ? '0' : '') + g\n  const bb = (b.length < 2 ? '0' : '') + b\n\n  var brightness = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  if (brightness < 40) {\n    col = `#${rr}${gg}${bb}`\n  }\n\n  return col\n}","/Users/abraham/Geometry-editor/src/Geometry.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":114,"column":6,"nodeType":"34","endLine":117,"endColumn":22,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":51,"column":22,"nodeType":"38","messageId":"39","endLine":51,"endColumn":23,"suggestions":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'drawObjects', 'prepareCanvas', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["43"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["44","45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"messageId":"48","fix":"49","desc":"50"},{"messageId":"51","fix":"52","desc":"53"},"Update the dependencies array to be: [drawObjects, prepareCanvas, props, props.objects, props.restartScale, state.dragging, state.scale, state.x, state.y]",{"range":"54","text":"55"},"removeEscape",{"range":"56","text":"57"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"58","text":"59"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2829,2924],"[drawObjects, prepareCanvas, props, props.objects, props.restartScale, state.dragging, state.scale, state.x, state.y]",[973,974],"",[973,973],"\\"]